package cn.edu.bit;

import java.math.BigDecimal;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Sudoku {
	static int num;
		public static void main(String[] args) {
			System.out.println("hello world\n");
			 if (args.length != 2) {  
		        System.out.println("您的输入不正确\n"); 
		        System.out.println("正确的输入格式为：java sudoku -c 阿拉伯数字");
		        return;  
		    }else {
		    	if(args[0]!="-c"){
		    		System.out.println("您的输入不正确\n"); 
		            System.out.println("正确的输入格式为：java sudoku -c 阿拉伯数字");
		            return; 
		    	}
		    	if(!isNumeric(args[1])){
		    		System.out.println("您的输入不正确\n"); 
		            System.out.println("正确的输入格式为：java sudoku -c 阿拉伯数字");
		            return; 
		    	}
		    }
		    System.out.println("您调用main方法时指定的参数包括：");  
		    for (int i = 0; i < args.length; i++) {  
		        System.out.println("参数" + (i + 1) + "的值为：" + args[i]);  
		    } 
		    num=Integer.valueOf(args[1]);
		}
		public static boolean isNumeric(String str) {
		    // 该正则表达式可以匹配所有的数字 包括负数
		    Pattern pattern = Pattern.compile("-?[0-9]+(\\.[0-9]+)?");
		    String bigStr;
		    try {
		        bigStr = new BigDecimal(str).toString();
		    } catch (Exception e) {
		        return false;//异常 说明包含非数字。
		    }

		    Matcher isNum = pattern.matcher(bigStr); // matcher是全匹配
		    if (!isNum.matches()) {
		        return false;
		    }
		    return true;
		}

}
